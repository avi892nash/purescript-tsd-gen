name: Build and Publish purs-tsd-gen

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x86_64, arm64]
        exclude:
          - os: windows-latest
            architecture: arm64
          - os: ubuntu-latest
            architecture: arm64

    steps:

      - uses: actions/checkout@v2

      - id: "haskell"
        name: "(Non-Linux only) Install Haskell"
        uses: "haskell/actions/setup@v1"
        with:
          enable-stack: true
          stack-version: "${{ env.STACK_VERSION }}"
          stack-no-global: true
      - name: Build Binary
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            stack build --copy-bins --local-bin-path ./dist
            mv ./dist/purs-tsd-gen.exe ./purs-tsd-gen-win.exe
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            if [ "${{ matrix.architecture }}" == "x86_64" ]; then
              stack build --copy-bins --local-bin-path ./dist
              mv ./dist/purs-tsd-gen ./purs-tsd-gen-macos-x86_64
            else
              stack build --copy-bins --local-bin-path ./dist
              mv ./dist/purs-tsd-gen ./purs-tsd-gen-macos-arm64
            fi
          else
            stack build --copy-bins --local-bin-path ./dist
            mv ./dist/purs-tsd-gen ./purs-tsd-gen-linux
          fi
        shell: bash

      - name: Upload Binary to GitHub Release 
        uses: actions/upload-release-asset@v1 
        if: github.ref_type == 'tag' 
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./purs-tsd-gen-* 
          asset_name: purs-tsd-gen-${{ matrix.os }}-${{ matrix.architecture }}
          asset_content_type: application/octet-stream
