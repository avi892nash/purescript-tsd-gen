name: Build and Publish purs-tsd-gen

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x86_64, arm64]
        exclude:
          - os: windows-latest
            architecture: arm64
          - os: ubuntu-latest
            architecture: arm64

    steps:

      - uses: actions/checkout@v2
      - uses: "actions/setup-node@v2"
        with:
          node-version: "16"

      - id: "haskell"
        name: "(Non-Linux only) Install Haskell"
        uses: "haskell/actions/setup@v1"
        with:
          enable-stack: true
          stack-version: "${{ env.STACK_VERSION }}"
          stack-no-global: true
      - name: Build Binary
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            stack build --copy-bins --local-bin-path ./dist
            mv ./dist/purs-tsd-gen.exe ./purs-tsd-gen-win.exe
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            if [ "${{ matrix.architecture }}" == "x86_64" ]; then
              stack build --copy-bins --local-bin-path ./dist
              mv ./dist/purs-tsd-gen ./purs-tsd-gen-macos-x86_64
            else
              stack build --copy-bins --local-bin-path ./dist
              mv ./dist/purs-tsd-gen ./purs-tsd-gen-macos-arm64
            fi
          else
            stack build --copy-bins --local-bin-path ./dist
            mv ./dist/purs-tsd-gen ./purs-tsd-gen-linux
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.architecture }}-binary
          path: purs-tsd-gen-*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-x86_64-binary
          path: ./releases/
     
      - uses: actions/download-artifact@v2
        with:
          name: macos-latest-x86_64-binary
          path: ./releases/
       
      - uses: actions/download-artifact@v2
        with:
          name: macos-latest-arm64-binary
          path: ./releases/
       
      - uses: actions/download-artifact@v2
        with:
          name: windows-latest-x86_64-binary
          path: ./releases/
      - name: Configure Git
        run: |
          git config --global user.name "Github Action"
          git config --global user.emal "actions@github.com"
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm version ${{ github.ref_name }}
          npm publish